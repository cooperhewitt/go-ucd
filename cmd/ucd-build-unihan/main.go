package main

import (
	"archive/zip"
	"bufio"
	"bytes"
	"flag"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"strings"
	"time"
)

func main() {

	unihan_data := flag.String("data", "https://unicode.org/Public/UCD/latest/ucd/Unihan.zip", "The URL of your Unihan source data")

	flag.Parse()

	rsp, err := http.Get(*unihan_data)
	defer rsp.Body.Close()

	if err != nil {
		log.Fatal(err)
	}

	body, err := ioutil.ReadAll(rsp.Body)

	reader, err := zip.NewReader(bytes.NewReader(body), rsp.ContentLength)

	if err != nil {
		log.Fatal(err)
	}

	ts := time.Now()

	fmt.Printf("%s\n\n", "package unihan")

	fmt.Printf("/* %s */\n", *unihan_data)
	fmt.Printf("/* This file was generated by robots at %s */\n\n", ts.UTC())

	fmt.Printf("%s\n", "var UCDHan = map[string]string{")

	for _, zf := range reader.File {
		// log.Printf(zf.Name)

		if zf.Name != "Unihan_Readings.txt" {
			continue
		}

		src, err := zf.Open()

		if err != nil {
			log.Fatal(err)
		}

		defer src.Close()

		// sudo break here and move all this stuff outside
		// of the for loop... (20150709/straup)

		scanner := bufio.NewScanner(src)

		for scanner.Scan() {

			ln := scanner.Text()

			if strings.HasPrefix(ln, "#") {
				continue
			}

			parts := strings.Split(ln, "\t")

			if len(parts) != 3 {
				continue
			}

			if parts[1] != "kDefinition" {
				continue
			}

			code := parts[0]
			desc := parts[2]

			code = strings.Replace(code, "U+", "", 1)
			desc = strings.ToUpper(desc)

			fmt.Printf("\t\t\"%s\":\t\"%s\",\n", code, desc)
		}

		// see note above

		break
	}

	fmt.Printf("%s\n", "}")

}
